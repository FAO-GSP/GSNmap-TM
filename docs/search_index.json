[["index.html", "Technical Manual for Global Soil Nutrient and Nutrient Budgets map (GSNmap) Foreword", " Technical Manual for Global Soil Nutrient and Nutrient Budgets map (GSNmap) FAO Foreword "],["abbreviations-and-acronyms.html", "Abbreviations and acronyms", " Abbreviations and acronyms BD Bulk Density CO2 Carbon dioxide CRF Coarse fragments DM Dry matter DSM Digital soil mapping GAUL Global Administrative Unit Layers GHG Greenhouse gas GSOCmap Global Soil Organic Carbon Map GSOCseq Global Soil Organic Carbon Sequestration Potential Map GSP Global Soil Partnership HWSD Harmonized World Soil Database ISCN International Soil Carbon Network INSII International Network of Soil Information Institutions IPBES Intergovernmental Platform on Biodiversity and Ecosystem Services IPCC Intergovernmental Panel on Climate Change IPR Intellectual Property Rights ITPS Intergovernmental Technical Panel on Soils LDN Land Degradation Neutrality NDVI Normalized difference in vegetation index NPP Net Primary Production P4WG Pillar 4 Working Group QA/QC Quality Assurance/Quality Check RMSE Root mean square error SDF Soil Data Facility SDG Sustainable Development Goals SISLAC Latin America and the Caribbeans Soil Information System SOC Soil organic carbon SOM Soil organic matter SPADE/M Soil Profile Analytical Database of Europe of Measured Parameters SWRS Status of Worlds Soil Resources UNCCD United Nations Convention to Combat Desertification WFS Web Feature Service WoSIS World Soil Information Service "],["contributors.html", "Contributors", " Contributors Prepared by: Global Soil Partnership Secretariat Ronald Vargas Second Intergovernmental Technical Panel on Soils Luca Montanarella - European Commission, Joint Research Centre (Chair); Saéb AbdelHaleem Khresat Third Intergovernmental Technical Panel on Soils Rosa Poch - Spain (Chair); Nsalambi V. Nkongolo - Democratic Republic of the Congo; "],["presentation.html", "Chapter 1 Presentation 1.1 Background and objectives 1.2 Global Soil Partnership 1.3 Country-driven approach and tasks 1.4 How to use this book", " Chapter 1 Presentation 1.1 Background and objectives Soil nutrient availability can affect ecosystem carbon cycling, plant phenology, plant diversity and community composition, plant-herbivore and plant-soil-microbe interactions, as well as the structure of trophic food webs (van Sundert et al., 2020). Thus, the broad range of effects of nutrient availability also affects ecosystem functioning in face of global change, for instance the response of plants to elevated levels of CO2 (Vicca et al., 2018). In the context of agriculture, nutrient availability modulates crop productivity and thus food production. However, the COVID-19 pandemic, current conflicts and devastating extreme weather events triggered by climate change jeopardise achieving sustainable development goal (SDG) 2 (Zero Hunger) by 2030. To date, a total number of around 2.3 billion people are affected by moderate and severe food insecurity (FAO et al., 2022). Despite soil nutrient status and availability being vital to the provisioning of ecosystem services, globally-accessible and harmonised datasets on soil nutrient stocks and soil properties that govern nutrient availability are missing. Therefore, the current global situation requires an increase of food production while preserving natural (soil) resources, lowering greenhouse gas emissions and optimising the use of goods such as fertilisers on agricultural sites (Eisenstein, 2020). Fertiliser prices more than doubled within one year and grain prices increased by around 25 percent (Jan. 2021 - Jan. 2022) (Hebebrand and Laborde, 2022). With the start of the armed conflict in Ukraine in February 2022, this trend became more pronounced. Growing food insecurity and rapidly increasing fertiliser prices underscore the urgent need for informed decision-making and optimised soil nutrient management. However, a large data gap exists in regards to soil nutrient stocks and soil properties that govern nutrient availability. Therefore, FAOs Global Soil Partnership (GSP) has launched the Global Soil Nutrient and Nutrient Budget map (GSNmap) initiative in an endeavour to provide harmonised and finely resolved soil nutrient data and information to stakeholders following a country-driven approach. Up-to-date soil data on the status and spatial trends of soil nutrients and related soil attributes is key to guide policy-making to close yield gaps, and protect local natural resources. Therefore, locally-specific optimisation of soil nutrient and agricultural management are needed (Cunningham et al., 2013). The soil information collected in the GSNmap thereby serves as a cornerstone in delineating priority areas for action and thereby seizes the opportunity to reduce food insecurity, close yield gaps, and reduce environmental costs arising from mismanagement of soil nutrients and especially overfertilisation. 1.2 Global Soil Partnership The Global Soil Partnership (GSP) was established in December 2012 as a mechanism to develop a strong interactive partnership and to enhance collaboration and generate synergies between all stakeholders to raise awareness and protect the worlds soil resources. From land users to policymakers, one of the main objectives of GSP is to improve governance and promote sustainable management of soils. Since its creation, GSP has become an important partnership platform where global soil issues are discussed and addressed by multiple stakeholders at different levels. The mandate of GSP is to improve governance of the planets limited soil resources in order to guarantee productive agricultural soils for a food-secure world. In addition, it supports other essential soil ecosystem services in accordance with the sovereign right of each Member State over its natural resources. In order to achieve its mandate, GSP addresses six thematic action areas to be implemented in collaboration with its regional soil partnerships (Figure 1). The area of work on Soil Information and Data (SID) of the GSP builds an enduring and authoritative global system (GloSIS) to monitor and forecast the condition of the Earths soil resources and produce map products at the global level. The secretariat is working with the international network of soil data providers (INSII - International Network of Soil Information Institutions) to implement data related activities. 1.3 Country-driven approach and tasks The GSNmap initiative will be jointly implemented by the International Network of Soil Information Institutions (INSII) and the GSP Secretariat. The process will be country-driven, involving and supporting all Member States in developing their national GSNmap data products. The GSNmap products will be developed following a two phase approach: Phase I: development of soil nutrient and associated soil property maps; Phase II: quantification, analysis, projections of nutrient budgets for agricultural land use systems at national, regional and global scale. These guidelines only concern GSNmap Phase I, while the guidelines for the GSNmap Phase II will be published in the fourth quarter of 2022. Depending on national data availability and technical capacities, ad-hoc solutions will be developed by the GSNmap WG to support countries during the national GSNmap production and/or harmonisation phase. Where possible, GSP Secretariat will use publicly available data to gap-fill the areas which are not covered by the national submissions unless the country requests to be left blank on the GSNmap products. 1.4 How to use this book The present document is a technical manual on the phase I of the GSNmap initiative. It provides the scientific background on the importance of soil nutrients and guidance on the digital soil mapping techniques to map nutrients and soil properties that govern nutrient availability. It also comprises a compendium with all necessary scripts to generate national GSNmaps. Chapter 1 provides general information about the GSNmap initiative as another activity of the GSP. Chapter 2 focuses on the scientific state-of-the-art in terms of soil nutrients and soil nutrient mapping. Chapter 3 and 4 introduce the software requirements and the concept of digital soil mapping. Chapter 5 to 8 guide the reader through the nutrient mapping exercise of GSNmap Phase I providing step-by-step instructions. Chapter 9 explains how the national GSNmaps are reported to the GSP. Chapter 10 serves as a repository for the complete scripts needed for the GSNmap. The GSNmap Technical Manual is structured as a practical document to be used by national experts in the endeavour to employ digital soil mapping techniques to generate national nutrient maps based on a common methodology. The concept of digital soil mapping presented here can however be also used in mapping exercises that focus on other soil properties and is therefore also relevant to scientists and digital soil mappers. "],["soil-nutrients.html", "Chapter 2 Soil Nutrients 2.1 Definition of soil nutrients 2.2 Soil properties governing nutrient availability", " Chapter 2 Soil Nutrients 2.1 Definition of soil nutrients In theory, soil nutrients are defined as those chemical elements that are essential to plant growth (von Liebig, 1841; Arnon and Stout, 1939). First, von Liebig (1841) declared nitrogen (N), sulphur (S), phosphorus (P), potassium (K), calcium (Ca), magnesium (Mg), silicon (Si), sodium (Na) and iron (Fe) as being essential. However, these findings lacked experimental research and were based on merely observational studies. Furthermore, if plant uptake is the only criteria for essentiality, the definition disregards the fact that plants also take up innecessary or even toxic elements. Therefore, stricter criteria such as the one by Arnon and Stout (1939) were defined. They postulated that three criteria need to be met for an essential mineral nutrients (Kirkby, 2012): 1. Nutrient must be required by plants to complete their life cycle; 2. Nutrient must be irreplaceable; and 3. Nutrient must be involved in the plant metabolism. Following this defintion to date the following nutrients would be considered essential for higher plants (Mengel et al., 2001): carbon (C), hydrogen (H), oxygen (O), N, P, S, cobalt (Co), K, Ca, Mg, Fe, manganese (Mn), copper (Cu), Si, zinc (Zn), molybdenum (Mo), boron (B), chlorine (Cl), nickel (Ni), Na. However, Co, Si, Ni, and Na are not considered essential for all plants. Other definitions used biochemical functions for classification purposes (Mengel and Kirkby, 2001). Here, four nutrient groups are distinguished: 1. major constituents of organic material (C, H, O, N, S); 2. nutrients that are involved in esterification of alcohol groups (P, B, Si); 3. nutrients that establish an osmotic potential (ions) (K, Na, Ca, Mg, Mn, Cl); and 4. nutrients that enable electron transport (ions or chelates) (Fe, Cu, Zn, Mo). Still, the most common classification of soil nutrients is based on the absolute quantities of an element that a plant takes up resulting in macro- and micronutrients (Mengel &amp; Kirkby, 2012). Despite being widely used, the definition has several shortcomings as also toxic elements can be taken up in greater quantities (e.g. Al). Furthermore, the threshold definition between macro- and micronutrients is somewhat arbitrary (Mengel &amp; Kirkby, 2012). It is important to point out that the discussion on how to accurately define essential nutrients is ongoing as recent contribution to the topic show (Brown et al., 2022). The generation of the GSNmaps is oriented by the recently published report on the state of the art of soils for nutrition (FAO, 2022) and is shown in Table XX. It is based on the contribution of each element to the average plant content. Table XX: Classification of macro- and micronutrients by FAO (2022). Macronutrients Micronutrients N Fe P Mn K Zn Ca Cu Mg B S Mo - Cl 2.2 Soil properties governing nutrient availability The uptake of nutrients by plants is regulated in parts by the organism itself as for instance shoot growth is coupled with root growth (Wang et al., 2007). Still, soil properties mediate nutrient mobility and conditions at the plant-soil interface. The most important soil properties that determine nutrient availability are physicochemical properties such as soil pH, cation exchange capacity (CEC), soil texture, soil organic matter (SOM) content, and bulk density (BD). Most nutrients are taken up in their ionized form (Robertson et al., 1999). Therefore, the chemical characterization of the soil solution is key to understand nutrient dynamics and uptake. Soil pH, as a measure of exchangeable hydrogen protons (H+), is a crucial parameter to determine the acidity of the soil solution that can inhibit or mediate nutrient uptake. For instance, very low pH values of around 4 decreased the uptake of (basic) cations such as Ca or Mg by paddy rice, wheat, corn, common bean and cowpea whereas lower pH values favoured the uptake of Zn, Fe, and Mn. At higher pH values the uptake of cations was enhanced (Fageria &amp; Zimmermann, 2008). The CEC, as a measure of exchangeable cations (e.g K+, Mg2+, Ca2+, etc.) available in the soil solution and attached to soil particles is a complementary parameter of nutrient availability in soils (Robertson et al., 1999). The CEC informs on the capacity of soils to retain positively charged nutrients (basic cations) and thus gives information on how strong a soil can buffer subsequent acidification. This retention and buffer capacity is strongly linked to soil texture. High clay contents usually lead to higher CEC and thus higher cation retention. Conversely, sandy textured soils strongly rely on soil organic matter (SOM) content that has high CEC to retain cations. SOM content further augments aeration of soils due to its low density and provides high specific surface area to retain nutrients. Finally, BD is key to nutrient availability as it governs facilitates or inhibits root growth and thus nutrient uptake by plants. Due to its impact on soil porosity, BD also governs microbial activity (through aeration) and water infiltration that defines nutrient mobility. "],["setting-up-the-software-environment.html", "Chapter 3 Setting-up the software environment 3.1 Use of R, RStudio and R Packages 3.2 R packages 3.3 GEE - google earth engine 3.4 rgee - Extension to use google earth engine in R", " Chapter 3 Setting-up the software environment This chapter provides an overview on the software required to map soil nutrients and associated soil properties. The tools are open source and can be downloaded and installed by users following the steps that are described here. The instructions given are for Microsoft Windows operational systems. Instructions for other operational systems (e.g. Linux Flavours, MacOS) can be found through free online resources. 3.1 Use of R, RStudio and R Packages R is a language and environment for statistical computing created in 1992. It provides a wide variety of statistical (e.g. linear modeling, statistical tests, time-series, classification, clustering, etc.) and graphical methods, and has been constantly extended by an exceptionally active user community. 3.1.1 Obtaining and installing R Installation files and instructions can be downloaded from the Comprehensive R Archive Network (CRAN). Go to the following link https://cran.r-project.org/ to download and install R. Pick an installation file for your operational system. Choose the base distribution of R (particularly if it is the first time you install R). Download the R installation file and open the file on your device. Follow the installation instructions. 3.1.2 Obtaining and installing RStudio Beginners will find it very hard to start using R because it has no Graphical User Interface (GUI). There are some GUIs which offer some of the functionality of R. RStudio makes R easier to use. It includes a code editor, debugging and visualization tools. Similar steps need to be followed to install RStudio. Go to https://www.rstudio.com/products/rstudio/download/ to download and install RStudios open source edition. On the download page, RStudio Desktop, Open Source License option should be selected. Pick an installation file for your platform. Follow the installation instruction on your local device. Figure 3.1: R Studio interface. The RStudio interface is structured by four compartments (see Fig. 2.1). The code editor is located in the upper left. Scripts that contain codes are displayed here. New scripts can be opened by clicking on the left most New button in the quick access tool bar (highlighted in green). Lines of code can be executed by clickinig on Run (highlighted in blue) or by pressing ctrl + enter on your keyboard. The output of scripts or lines of code that are executed is displayed in the window below the code editor: the console (bottom left). This part of the interface corresponds to the R software that were installed previously. When working in R, it is central to work with so-called objects (for instance vectors, dataframes or matrices). These objects are saved in the global environment that is displayed in the top right panel. Finally, the R software offers a broad range of powerful tools for visualisation purposes. Graphs or maps that are generated by scripts/codes, are displayed in the bottom right panel. 3.1.3 Getting started with R R manuals: http://cran.r-project.org/manuals.html Contributed documentation: http://cran.r-project.org/other-docs.html Quick-R: http://www.statmethods.net/index.html Stackoverflow R community: https://stackoverflow.com/questions/tagged/r 3.2 R packages When you download R, you get the basic R system which implements the R language. R becomes more useful with the large collection of packages that extend the basic functionality of it. R packages are developed by the R community. refer to: * tidyverse book (R for data science) * caret (broad range of statistical learning functions) * R spatial: https://rspatial.org/ (R packages for spatial data operations) The primary source for R packages is CRANs official website, where currently about 12,000 available packages are listed. For spatial applications, various packages are available. You can obtain information about the available packages directly on CRAN with the available.packages() function. The function returns a matrix of details corresponding to packages currently available at one or more repositories. An easier way to browse the list of packages is using the Task Views link, which groups together packages related to a given topic. Packages come along with extensive documentation that is very helpful to understand and solve error messages. To access information on functions or packages, type ?[Package or Function name] in the console. The information on the package and/or function can then be accessed in the bottom right panel under Help (see Fig. 2.1). In addition to that, the R documentation website (https://www.rdocumentation.org/) provides more extensive help and gives clear overviews on all functions comprised in a certain package. 3.3 GEE - google earth engine Google earth engine (GEE) provides a large range of remote sensing datasets for users. It allows to use the GEE code editor to run computations using the google servers. The high computational power of these servers enables users with limited computational caapacities to run complex calculations. A user account must be created to use the code editor. This step can take some time. Once the account is validated, scripts can be written in the code editor using the Javascript language. An extensive array of instructions and guides are available on the platform. Alternatively, the Python language can be used to interact with the data. The code editor interface is structured by three panels and a map viewer (see Fig. 2.2). The left panel is structured in Scripts, Docs, and Assets. Under Scripts users can organize and save the scripts they wrote for specific purposes. Docs provides further information on so-called server-side functions that can be used to manipulate the data. Finally, in Assets users can upload own spatial data in common formats such as shapefiles (.shp) or raster files (.tif). The middle panel contains the scripts that can be run by clicking on the Run button. The right panel is composed of three functionalities. The Inspector provides basic information on a pixel of a layer displayed in the map below. The information consists of longitude, latitude, and - if layers are loaded - values of the pixel. The Console is the place where certain commands expressed in the code are shown. The most common expressions shown here are print() commands or figures derived from the loaded data. Finally, the Tasks button shows all tasks that were formulated in the code/script and are to be submitted to the server for computation. Once a task is submitted, the user has to click on the Run button appearing in the Tasks section to submit the task to the server. In addition to that, the data catalog can be accessed via the search bar on the top of the page. Here, key information on the available datasets, origin, resolution and related publications can be found. Figure 3.2: Google Earth Engine code editor. The upload of assets in particular shapefiles with the area of interest (AOI) is often a key step to extract only the necessary information from a dataset. To upload a dataset, once has to right-click on Assets in the right panel and then on the red New button in the code editor interface (see Fig. 2.3). After selecting the file format of file, a second window opens. Figure 3.3: Select files and filetype to be uploaded as GEE assets. Here the source file needs to be selected from the respective folder and a folder in the GEE environment has to be selected under Asset ID. After that, the user right-clicks on Uplaod in the bottom right of the window (see Fig. 2.4). In the right panel under Tasks appears the uploading task that is executed. Once this process is finished, a tick mark appears and after refreshing the Assets panel on the left, the user can see the uploaded shapefile. Figure 3.4: Upload interface. 3.4 rgee - Extension to use google earth engine in R To generate the GSNmap, the user is going to use an R package to interact with the GEE environment. The rgee package enables users to interact with the GEE servers using the R language (Aybar, 2022). The package makes use of the Python language to interact with GEE. The package can be downloaded easily either directly from the GitHub repository or via CRAN. The prerequisite to have access to GEE is to create a user account on https://earthengine.google.com/. Once you have a GEE account, it is necessary to install the rgee package on your machine. After installing and loading the package to your session in R studio, it is necessary to install the so-called Miniconda commmand prompt which acts as a Python interpreter mediating between R and GEE. The ee_install() function automatically downloads and install all the software that is needed. # install package install.packages(&quot;rgee&quot;) # load rgee package library(rgee) # install miniconda and other dependencies ee_install(py_env = &quot;rgee&quot;) Once the dependencies are installed, it is necessary to initialize rgee by providing the user credentials of the created GEE account. The ee_Initialize command must be run every time rgee is used. # Initialize Google Earth Engine! (you need to create a user account) ee_Initialize() In case problems arise during the installation, the following functions may be helpful to clear user credentials or clean the python environment created with the ee_install() command. In first place, it is recommendable to consult the rgee documentation website (https://r-spatial.github.io/rgee/articles/rgee01.html) to get more detailed information on the installation procedure and possibilities for problem solving. # Useful functions #ee_check() # check the dependencies that do not belong to R #ee_clean_credentials() # to remove the user credentials #ee_clean_pyenv() # Delete variables of the system References "],["introduction-to-digital-soil-mapping-of-soil-nutrients-and-associated-soil-attributes.html", "Chapter 4 Introduction to Digital Soil Mapping of soil nutrients and associated soil attributes", " Chapter 4 Introduction to Digital Soil Mapping of soil nutrients and associated soil attributes Digital soil mapping (DSM) is a methodological framework to create soil attribute maps on the basis of the quantitative relationships between spatial soil databases and environmental covariates. The quantitative relations can be modelled by different statistical approaches, most of them considered machine learning techniques. Environmental covariates are spatially explicit proxies of soil-forming factors that are employed as predictors of the geographical distribution of soil properties. The methodology has evolved from the theories of soil genesis developed by Vasil Dokuchaev in his work the Russian Chernozems (1883), which later were formalised by Jenny (1941) with the equation of the soil-forming factors. The conceptual equation of soil-forming factors has been updated by McBratney, Santos and Minasny (2003) as follow: \\[\\begin{equation} S = f\\left(s,c,o,r,p,a,n\\right) \\tag{4.1} \\end{equation}\\] Where \\(S\\) is the soil classes or attributes (to be modelled) as a function of \\(s\\) as other soil properties, \\(c\\) as climatic properties, \\(o\\) as organisms, including land cover and human activity, \\(r\\) as terrain attributes, \\(p\\) as parent material, \\(a\\) as soil age, and \\(n\\) as the geographic position. Digital soil mapping has been used to produce maps of soil nutrients. For instance, Hengl et al. (2017) predicted 15 soil nutrients at a 250 m resolution in Africa, using a random forest model (Wright and Ziegler, 2016), topsoil nutrient observations at point locations and a set of spatially-explicit environmental covariates. In 2021, Hengl et al. applied the same modelling approach to estimate total phosphorus in semi-natural soils at the global scale, as well. In this technical manual, we present a DSM frameworks to map soil properties, including soil nutrients. One approach for soil observations with latitude and longitude data (point-support) (Figure \\(\\ref{fig:workflow1}\\)). References "],["step-1-soil-data-preparation.html", "Chapter 5 Step 1: soil data preparation", " Chapter 5 Step 1: soil data preparation Soil data consist of measurement at a specific geographical location, time and soil depth. Therefore, it is necessary to arrange the data following the format shown in Table \\(\\ref{tab:data1}\\). Soil data usually require a preprocessing step to solve common issues such as, arranging the data format, fixing soil horizon depth consistency, detecting unusual soil property measurements, among others issues. Once the original dataset is clean and consistent, data harmonisation is needed to produce synthetic horizons (such as 0-30 cm layer), as well as to make compatible measurements from different lab methods. Horizon harmonisation will be done with the mass preserving spline function (Bishop, McBratney and Laslett, 1999; Malone et al., 2009) fitted to each individual soil profile, which requires more than a layer per profile. In the cases of single-layer samples, which is common in sampling for nutrient determination, a pedotransfer function locally calibrated should be applied. Pedotransfer functions will be also required to harmonise the laboratory methods. Experts from GLOSOLAN will provide advice in this regard. References "],["step-2-environmental-covariates.html", "Chapter 6 Step 2: environmental covariates 6.1 Environmental covariates 6.2 Reducing collinearity in environmental covariates 6.3 Merging soil data and environmental covariates", " Chapter 6 Step 2: environmental covariates 6.1 Environmental covariates The SCORPAN equation (Eq. \\(\\ref{eq:scorpan}\\)) refers to the soil-forming factors that determine the spatial variation of soils. However, these factors cannot be measured directly. Instead, proxies of these soil forming factors are used. One essential characteristic of the environmental covariates is that they are spatially explicit, covering the whole study area. Table 2 shows a summary of the environmental covariates that can be implemented under the DSM framework. Apart from the environmental covariates mentioned in Table \\(\\ref{tab:covs}\\), other types of maps could also be included, such as Global Surface Water Mapping Layers and Water Soil Erosion from the Joint Research Centre (JRC). At national level there may be very significant covariates that could complement or replace the covariates of Table \\(\\ref{tab:covs}\\). Since environmental covariates are available at different resolutions and coordinate reference systems (CRS), they have to be harmonised at a common resolution and CRS. The target resolution in GSNmap is 250 m x 250 m, therefore, all covariates were aggregated (from higher to lower resolution) or disaggregated (from lower to higher resolution) to 250 m. This process involved a raster resampling method, which is usually implemented by a bilinear approach for continuous covariates, and by the nearest-neighbour approach for categorical covariates (not included in the current list). Note that the target resolution of GSNmap has been set at 250 m, which can be considered a moderate resolution for a global layer. However, those countries that require a higher resolution are free to develop higher resolution maps and aggregate the resulting maps to the target resolution of GSNmap for submission. 6.2 Reducing collinearity in environmental covariates Multicollinearity is usually present in remote sensing data and terrain attributes. While this was an issue for multiple linear regression models, current models such as random forest can deal with high dimensionality. However, the main reasons to reduce the number of environmental covariates are that a model with fewer predictors can be interpreted more easily, thus extracting new knowledge, redundant information increasing the computational demand, and improve prediction results (Behrens et al., 2014). Covariate selection can be done by supervised or unsupervised methods (Behrens et al., 2010). Supervised methods work on the basis of prediction results, hence they are based on a given dataset. For instance, recursive feature elimination (RFE) in caret R package (Kuhn, 2022) provides a tool for selecting covariates according to their predicting contribution. Instead, unsupervised methods are used to reduce the dimensionality of the dataset by removing redundant information without taking into account a particular target variable. Principal component analysis is one of the most widely used for this purpose, however, it does not ensure that specific discriminant features are kept within the main factors (Behrens et al., 2014). Another drawback of this technique is that model interpretation can be reduced when using factors instead of the original covariates. 6.3 Merging soil data and environmental covariates A calibration dataset consists of soil observations and a matrix of predictors, where each row is a soil observation paired with the values of the corresponding covariates for the given spatial location. Some common issues and solution when merging soil observations and covariates are: Mismatch of coordinate reference system (CRS): it requires to convert the CRS of point data to the raster or polygon covariate CRS. Categorical covariates: some covariates may be categorical, such as land use/cover, legacy soil maps or geological maps. A common problem in this case is that some classes may not be sampled with any soil observation, causing an error when using the layer for prediction, since the model cannot predict over a class that was not part of the model calibration step. Also, because of the cross-validation procedure, it is advised to have, at least, three soil samples per class for the same reason. References "],["step-3-mapping-continuous-soil-properties.html", "Chapter 7 Step 3: Mapping continuous soil properties 7.1 Setting up repeated k-fold cross validation 7.2 Model calibration 7.3 Predicting soil attributes", " Chapter 7 Step 3: Mapping continuous soil properties 7.1 Setting up repeated k-fold cross validation Cross validation is one of the most used methods in DSM for assessing the overall accuracy of the resulting maps (Step 8, Figure 3). Since this is implemented along with the model calibration step, we explain the process at this stage. Cross validation consists of randomly splitting the input data into a training set and a testing set. However, a unique testing dataset can bias the overall accuracy. Therefore, k-fold cross validation randomly splits the data into k parts, using 1/k part of it for testing and k-1/k part for training the model. In order to make the final model more robust in terms of parameter estimations, we include repetitions of this process. The final approach is called repeated k-fold cross-validation, where k will be equal to ten in this process. A graphical representation of the 10-fold cross validation is shown in Figure \\(\\ref{fig:cv}\\). Note that green balls represent the samples belonging to the testing set and yellow balls are samples of the training set. Each row is a splitting step of the 10-folds, while each block (repetitions) represent the repetition step. Step 5 in Figure 3 represents the repeated cross-validation, but note that after each single splitting step (the rows in Figure 4) the training data go to model calibration, which will be explained in Step 6 (next Section), and the testing data will be used with the calibrated model to produce the residuals (Step 8, Section 2.2.8). Repeated cross validation has been nicely implemented in the caret R package (Kuhn, 2022), along with several calibration methods. 7.2 Model calibration The model calibration step involves the use of a statistical model to find the relations between soil observations and environmental covariates. One of the most widely used models in DSM is random forest (Breiman, 2001). Random forest is considered a machine learning method which belongs to the decision-tree type of model. Random forest creates an ensemble of trees using a random selection of covariate. The prediction of a single tree is made based on the observed samples mean in the leaf. The random forest prediction is made by taking the average of the predictions of the single trees. The size of the number of covariates at each tree (mtry) can be fine-tuned before calibrating the model. Quantile regression forests (QRF, Meinshausen (2006)) are a generalisation of the random forest models, capable of not only predicting the conditional mean, but also the conditional probability density function. This feature allows one to estimate the standard deviation of the prediction, as well as the likelihood of the target variable falling below a given threshold. In a context where a minimum level of a soil nutrient concentration may be decisive for improving the crop yield, this feature can play an important role for the GSNmap initiative. Model calibration will be implemented using the caret package (Kuhn, 2022). While we suggest to use QRF, caret provides a large set of models https://topepo.github.io/caret/available- models.html#) that might perform better in specific cases. In this regard, it is up to the user to implement a different model, ensuring the product specifications (Section Product Specifications). 7.3 Predicting soil attributes After calibrating the model, caret will select the best set of parameters and will fit the model using the whole dataset. Then, the final model can be used to predict the target soil properties. The process uses the model and the values of the covariates at target locations. This is generally done by using the same input covariates as a multilayer raster format, ensuring that the names of the layers are the same as the covariates in the calibration dataset. In this step we will predict the conditional mean and conditional standard deviation at each raster cell. References "],["step-4-uncertainty-assessment.html", "Chapter 8 Step 4: uncertainty assessment 8.1 Introduction", " Chapter 8 Step 4: uncertainty assessment 8.1 Introduction Accuracy assessment is an essential step in digital soil mapping. One aspect of the accuracy assessment has been done in Step 7 by predicting the standard deviation of the prediction, which shows the spatial pattern of the uncertainty. Another aspect of the uncertainty is the estimation of the overall accuracy to measure the model performance. This will be measured using the model residuals generated by caret during the repeated cross validation step. The residuals produced by caret consist of tabular data with observed and predicted values of the target soil property. They can be used to estimate different accuracy statistics. Wadoux, Walvoort and Brus (2022) have reviewed and evaluated many of them. While they concluded that there is not a single accuracy statistic that can explain all aspect of map quality, they recommended the following: mean prediction error (ME), that estimates the prediction bias; mean absolute prediction error (MAE) and root mean squared prediction error (RMSE) to estimate the magnitude of the errors; and model efficiency coefficient (MEC) (Janssen and Heuberger, 1995) as an estimator of the proportion of variance explained by the model. While solar diagrams (Wadoux, Walvoort and Brus, 2022) are desired, we propose to produce a scatterplot of the observed vs predicted values maintaining the same range and scale for the X and Y axes. Finally, note that accuracy assessment has been discussed in Wadoux et al. (2021), since the spatial distribution of soil samples might constrain the validity of the accuracy statistics. This is especially true in cases where the spatial distribution of observations is clustered. The authors recommended creating a kriging map of residuals before using them for assessing the map quality. References "],["compendium-of-r-scripts.html", "Chapter 9 Compendium of R scripts", " Chapter 9 Compendium of R scripts "],["reporting-results.html", "Chapter 10 Reporting results", " Chapter 10 Reporting results "],["way-forward.html", "Chapter 11 Way forward", " Chapter 11 Way forward "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
